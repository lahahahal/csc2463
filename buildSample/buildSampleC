let sounds = new Tone.Players({

    "death" : "sounds/piano_death.wav",
    "howling" : "sounds/wind_howl1.wav",
    "owl" : "sounds/owl-1.wav",
    "chime" : "sounds/clock-chime1.wav",
})

const delay = new Tone.FeedbackDelay("8n", 0.5);

let soundNames = ["death", "howling", "owl", "chime"];
let buttons = [];

let dSlider;
let fSlider;

function setup() {
    createCanvas(400,400);
    sounds.connect(delay);
    delay.toDestination();

    soundNames.forEach((word, index) => {
        buttons[index] = createButton(word);
        buttons[index].position(index, index*50);
        buttons[index].mousePressed( () => buttonSound(word))
    })

    dSlider = createSlider(0., 1., 0.5, 0.05)
    dSlider.mouseReleased( () => {
        delay.delayTime.value = dSlider.value();
    })

    fSlider = createSlider(0., 1., 0.5, 0.05)
    fSlider.mouseReleased( () => {
        delay.feedback.value = fSlider.value();
    })
}

const player = new Tone.Player("https://tonejs.github.io/audio/drum-samples/handdrum-loop.mp3");
player.autostart = true;
const filter = new Tone.AutoFilter(4).start();
const distortion = new Tone.Distortion(0.5);

player.chain(filter, distortion, Tone.Destination);

function draw() {
    background(220, 120, 180);
    text('press the buttons for sounds', 0, 150)
}

function buttonSound(whichSound) {
    sounds.player(whichSound).start();
}
